version: '3'

services:

  # The router for this microservice, will receive requests and fair distribute task to workers
  # This router will accept connections on port 1, the client needs to know the address and port 
  router:
    build:
      context: .
      dockerfile: ./router/Dockerfile
    volumes:
      - './router:/router'
    ports:
      - "5559:5559/tcp"
      - "5558:5558/tcp"
    working_dir: /router
    command: go run main.go

  # The Worker for this microservice, will receive tasks from router, can have any number of threads
  worker:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    volumes:
      - './worker:/worker'
    depends_on:
      - router
    working_dir: /worker
    stop_signal: SIGINT  #Needed to not stop in the middle of the work
    command: go run main.go --threads 1
  
  #A python Worker for this microservice
  worker_python:
    build:
      context: .
      dockerfile: ./worker_python/Dockerfile
    volumes:
      - './worker_python:/worker'
    working_dir: /worker
    stop_signal: SIGINT #Needed to not stop in the middle of the work
    command: python -u main.py --threads 1 # "u" to print on docker
  
  logger:
    build:
      context: .
      dockerfile: ./logger/Dockerfile
    volumes:
      - './logger:/logger'
    working_dir: /logger
    command: go run main.go

  # Some client for testing, will be removed
  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    volumes:
      - './client:/client'
      - './router:/router'
    depends_on:
      - router
    working_dir: /client
    command: go run main.go --router router:5559
    #command: go run main.go --router docker.for.mac.localhost:5559 you can also define a ip